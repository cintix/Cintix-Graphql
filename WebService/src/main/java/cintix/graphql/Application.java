/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cintix.graphql;

import cintix.graphql.service.programs.Mutation;
import cintix.graphql.service.programs.Query;

import graphql.GraphQL;
import graphql.kickstart.tools.SchemaParser;
import graphql.schema.GraphQLSchema;

import graphql.ExecutionResult;

public class Application {

    public Application() {

        GraphQLSchema graphQLSchema = SchemaParser.newParser()
                .file("schema.graphqls")
                .resolvers(new Query(), new Mutation())
                .build()
                .makeExecutableSchema();

        GraphQL graphQL = GraphQL.newGraphQL(graphQLSchema).build();
        ExecutionResult executionResult = graphQL.execute("{"
                + "  episode (id: 5) { id"
                + "           title "
                + "           description "
                + "  }"
                + "}");

        System.out.println("Query result: ");
        System.out.println(executionResult.toSpecification());
        executionResult = graphQL.execute("{"
                + "  events { id"
                + "           title "
                + "           location "
                + "  }"
                + "}");

        System.out.println("Query result: ");
        System.out.println(executionResult.toSpecification());

        executionResult = graphQL.execute("{"
                + "  list(first: 10) { "
                + "        edges {\n"
                + "            node {\n"
                + "               title\n"
                + "            }"
                + "            cursor\n"
                + "        }"
                + "        pageInfo {"
                + "           hasPreviousPage"
                + "           hasNextPage"
                + "        }"
                + "  }"
                + "}");
        System.out.println("Query result: ");
        System.out.println(executionResult.toSpecification());
      
        
        
        executionResult = graphQL.execute("{"
                + "  friends(first: 5) { "
                + "        totalCount\n"
                + "        edges {\n"
                + "            node {\n"
                + "               title\n"
                + "            }"
                + "            cursor\n"
                + "        }"
                + "        pageInfo {"
                + "           hasPreviousPage"
                + "           hasNextPage"
                + "        }"
                + "  }"
                + "}");
        System.out.println("Query result: ");
        System.out.println(executionResult.toSpecification());

    }

    public static void main(String[] args) {
        System.out.println(new Application());
    }
}
